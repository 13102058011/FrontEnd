1.CSS样式表
	1.CSS简介
		用来修饰网页样式的语法
		叫做重叠样式表
	
	2.三种CSS样式表的建立
		1.内联样式表
			<p style="color: #D1D3D6;">hello</p>
	
		
		2.内部样式表
			<style type="text/css">
				p{
					color:red;
				}
			</style>
			
			1.代码解析
				使用style标记创建样式表时，最好写在head标签之间
							
		3.外部样式表
			<link rel="stylesheet" type="text/css" href="../015练习/001.css"/>
			
			1.代码解析
				使用link元素导入外部样式表时，需要写在head标签之间
				
			2.属性解析
				rel="stylesheet"		用于定义文档关联，表示关联样式表
				type="text/css"			定义文档的类型
				
		4.导入样式
			使用 @import 可以在原样式规则中导入其他样式表，可以在外部样式、style标签中使用。
			导入样式要放在样式规则前面定义。
			@import url(../css/002.css);

	3.CSS常用选择符
		1.元素选择符
			1.示例
				div{
					color:blue;
				}
			2.用法
				使用标签名作为选择器(p,div,span,body,img...)
			
		2.ID选择符
			1.示例		
				#navigate {
					color:red;
				}
				<div id="navigate" >
			2.用法
				使用#+id来说明内部样式
				id表示身份，不能重复，只能选择单个元素
				
		3.类（别）选择符
			1.示例
				.nav {
					color：red;
				}
				<a href="#" class="nav">关于主页</a>
			2.用法	
				使用.+class来说明内部样式
				
		4.通用选择符
			1.示例
				*{
					color：bule;
				}
			2.用法
				对所有通用
			
		5.属性选择器
			1.说明
				根据属性来为元素设置样式也是常用的场景。

			2.示例
				[attribute]		[target]		选择带有 target 属性所有元素
				[attribute=value]  [target=_blank]	  -选择 title 属性包含单词 "flower" 的所有元素
				[attribute~=value] -[title~=flower]	   -选择 title 属性包含单词 "flower" 的所有元素
				[attribute|=value] -[lang|=en]		 选择 lang 属性值以 "en" 开头的所有元素。
				[attribute*=value] -a[src*="abc"]	  -选择其 src 属性中包含 "abc" 子串的每个 元素
				[attribute^=value] -a[src^="https"]	   -选择其 src 属性值以 "https" 开头的每个 元素
				[attribute$=value] -a[src$=".pdf"]	   选择其 src 属性以 ".pdf" 结尾的所有 元素
		
		6.伪类选择器
			1.说明
				为元素的不同状态或不确定存在的元素设置样式规则。

			2.示例
				状态	 	示例	 			说明
				:link	 		a:link			 选择所有未被访问的链接
				:visited	 	 -a:visited			-选择所有已被访问的链接
				:hover	    	-a:hover		  -鼠标移动到元素上时
				:active		 	 a:active		   点击正在发生时
				:focus			-input::focus		 选择获得焦点的 input 元素
				:root			:root			-选择文档的根元素即html
				:empty			-p:empty		  -选择没有子元素的每个元素（包括文本节点）
				:first-child   	   -p:first-child		-选择属于父元素的第一个子元素的每个元素
				:last-child	   	   p:last-child		   选择属于其父元素最后一个子元素每个元素
				:first-of-type		-p:first-of-type	  -选择属于其父元素的首个元素的每个元素
				:last-of-type		p:last-of-type		 选择属于其父元素的最后元素的每个元素
				:only-of-type		p:only-of-type		 选择属于其父元素唯一的元素的每个元素
				:only-child	   	   p:only-child		   选择属于其父元素的唯一子元素的每个元素
				:nth-child(n)		p:nth-child(2)		 选择属于其父元素的第二个子元素的每个元素
				:nth-child(odd)	 	 p:nth-child(odd)	   选择属于其父元素的奇数元素
				:nth-child(even) 	 -p:nth-child(even)		-选择属于其父元素的偶数元素
				:nth-of-type(n)	 	 p:nth-of-type(2)	   选择属于其父元素第二个元素的每个元素
				:nth-last-child(n)	  -p:nth-last-child(2)	  -同上，从最后一个子元素开始计数。
				:nth-last-of-type(n)   -p:nth-last-of-type(2)	-同上，但是从最后一个子元素开始计数。
				:not(selector)		-:not(p)		  -选择非元素的每个元素

		5.群组选择器
			1.示例
			
			2.用法
			
	4.CSS样式表的优先级
		<style type="text/css">
			#p1{
				color: blue;
			}
			.pp{
				color: orange;
			}
			*{
				color: green;
			}
			p{
				color: red;
			}
		</style>
		<p class="pp" id="p1" style="color: slateblue;">猜猜我什么颜色</p>
	
		1.优先级
			1.行内样式 > ID选择器 > 类选择器 > 标签选择器 > 通用选择器
			2.内部样式表和外部样式表的优先级和书写的顺序有关，靠后的优先级别高
		
		2.权重值
			1.通用选择器*
				权重值 0
			2.标签选择器 div, p...
				权重值 1
			3.类（别）选择器 .act, .nav...
				权重值 10
			4.ID选择器 #btn, #box...
				权重值 100
			5.行内样式
				权重值 1000
			6.继承
				没有权重，比通配符还低
		
		3.示例
			#box p .tt	权重：100+1+10 = 111
			#box .tt  	权重：100+10 = 110
			选择器选择的范围越小越精确，优先级越高
			有时在规则冲突时，为了让某个规则强制有效可以使用 !important

-------------------------------------------------------------------------------
2.CSS基本属性
	1.style="color: red; height: 30px; width: 80px; background-color: darkseagreen;"
		color = "字体颜色"
		height ="高度"
		width = "宽度"
		background-color = "背景颜色"
		text-align = "文本对齐方式"

	2.<body style="margin: 0;">
		使主题贴边显示

	3.<a href="#" style="text-decoration: none;">关于主页</a>
		取消超链接文字的下划线
		
	4.<html style="background-color: #ddd;">
		整个网页背景颜色
		
	5.border: solid 1px blue;
		设置边框：样式 大小 颜色
		solid	实线
		dashed 	虚线
		dotted	点线
		
	7.border-right
		设置右边框
		
	8.border: none;
		无边框
		
	9.margin: 0;
		设置边距为0
		
-------------------------------------------------------------------------------
3.span标签
	1.用法
		span，一个容器标签，不具备任何特殊功能，仅当作容器来使用。
		用于包裹一段文字，便于给文本添加样式

	2.示例
		<span style="background-color: gray;color: white;font-size: 24px;">白岩松</span>
		1.background-color: gray	容器背景颜色
		2.color: white				字体颜色
		3.font-size: 24px			字体大小
		
-------------------------------------------------------------------------------
4.div标签
	1.用法
		一个通用容器标签，不具备任何特殊功能，仅当作容器来使用。
		可以包裹任何内容，也可以容器直接互相包裹
		
	2.示例
		<div style="color: #555; margin: auto;">标签</div>
		1.margin:auto		容器居中对齐  
		2.width = 500px;	设置容器宽度

	3.特点
		一个空div，默认宽度为100%，高度为0

	4.line-height: 80px;
		设置行高
		字体默认16px
		行高默认21px
		
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------	
5.CSS文本类属性



	1.颜色
		color:red;
		
	2.字体类型
		font-famliy:"华文中宋"
		
	3.字体大小
		font-size:16px
		
	4.文字加粗
		font-weight:bold
		
	5.文字倾斜
		font-style:italic
		
	6.首行缩进
		text-indent:60px
		
	7.水平对齐方式
		text-align:center
		
	8.行高
		line-height:100px
	
	9.垂直居中
		height:100px;
		line-height:100px;
		background-color；gray;
		行高和高度一致，即垂直居中
		
	10.文本修饰
		text-decoration:underline

-------------------------------------------------------------------------------
6.常见图片类型
	1.jpg
		采用有损压缩算法
		体积较小
		不支持透明
		不支持动画
		
	2.gif
		支持动画
		只有全透明和不透明两种模式
		只有256种颜色

	3.png
		采用无损压缩算法0
		体积也相对较小
		支持背景透明
		不支持动画

	4.svg
		不会失真
		只能保存颜色和形状相对简单的图片

-------------------------------------------------------------------------------
7.背景图片的使用
	1.html ,body{
		height: 100%;
		margin: 0;
	}
		body默认宽为100%，高为一个单位
		html和body同时设置height：100%才能使body高为100%
		margin:0;表示略去下拉条，消除边距
		
	2.background-image: url(../img/1001294.jpg);
		插入背景图片，默认无限平铺
		background-repeat: no-repeat;表示不重复
	
	3.图片位置
		background-position: right bottom;
		第一个参数：水平位置
		第二个参数：垂直位置
		
	4.background：
		可以完成关于背景的所有内容
	
-------------------------------------------------------------------------------
8.元素浮动
	浮动元素会脱离网页文档，与其他元素发生重叠，但不会与文字内容发生重叠
	1.示例
		float: right ;
		right:向右浮动
		left:向左浮动
	
	2.父元素
		.outer{
			height: 200px;
		}
		<div class="outer">
			<div id="a"></div>
			<div id="b"></div>
			<div id="c"></div>
		</div>
		父元素可以清除浮动元素对于后面元素的影响
		
		1.overflow: auto;
			对于超出边界的元素，父元素做出自动的调整
			
		2.clear:left/right/both
			清除浮动元素对当前元素的影响

	3.浮动注意事项
		1.浮动元素在排列时，只参考前一个元素位置即可
			一行排不下时，下一行的元素会以前一个元素作为参考排列
		2.浮动元素重叠问题
			1.浮动元素不会覆盖文字内容
			2.浮动元素不会覆盖图片内容，图片可以看作一个特殊文字
			3.浮动元素不会覆盖表单元素（复选框等）

-------------------------------------------------------------------------------
9.盒模型
	1.margin: auto;
		自动设置边距，左右边距想等，达到居中效果，水平效果
		
	2.元素的边距
		margin-top: 20px;
		margin-bottom: 20px;
		margin-left: 20px;
		margin-right: 20px;

	3.填充
		所谓填充，就是指向一个元素的内部，增加空间也称为"内边距"
		和外边距不同的是，填充会改变元素大小，随着填充的增加，元素会被撑大
		padding: 15px;
		padding-top:15px;
		padding-bottom:15px;
		padding-left:15px;
		padding-right:15px;
	
	4.盒模型
		内容 -> 填充 -> 边框 -> 边距

	5.圆角
		1. border-radius: 5px;
        2. border-radius: 50%;	画圆

	6.display
		1.说明
			使用 display 控制元素的显示机制。

		2.属性解析
			1. none			隐藏元素
			2. block	    -显示为块元素
			3. inline		 显示为行元素，不能设置宽/高
			4. inline-block		行级块元素，允许设置宽/高f
-------------------------------------------------------------------------------
10.CSS属性的简写
	1.background
		background: gray url(xxx/xx.png) no-repeat;
		分别是：背景颜色，背景图片，平铺方式
		
	2.border
		border: 1px solid #D3f402;
		分别是：边框宽度，边框样式，边框颜色
		只有颜色可以省略，默认黑色
		
	3.font
		font: italic bold 20px/35px arial,scans-serif,"微软雅黑";
		斜体字，加粗，字号大小/行高 默认字体，备用字体，备用字体

	4.margin
		margin: 10px 15px 10px 15px
		上，右，下，左一个都不可省略
		margin: 10px 15px 10px	表示上，右下，左
		margin: 10px 15px		表示上右，下左
		margin: 10px 			表示上下左右
		
	5.padding
		padding：10px 15px 10px 15px
		上，右，下，左一个都不可省略（同上）
		
	6.颜色s
		color：DarkGoldenRod;
		color:rgb(184,134,11);
		color:#B8860B;

-------------------------------------------------------------------------------
11.颜色
	1. rebeccapurple	  雷贝卡紫色
	2. royalblue		宝蓝色
	3. rosybrown		玫瑰棕色
	4. blueviolet		-蓝紫色
	5. cadetblue		军蓝色
	6. wheat		  小麦色

	

-------------------------------------------------------------------------------
13.文本控制
	1.文本颜色
		1.字符串颜色
			color: red;
			可以使用如 red | green 等字符颜色声明

		2.使用十六进制网页颜色
			color: #ddffde;
			如果颜色字符相同如 #dddddd 可以简写为 #ddd

		3.使用RGB颜色
			color: rgb(38, 149, 162);

		4.透明颜色
			color: rgba(38, 149, 162, .2);
			透明色从 0~1 间，表示透明到不透明

	2.行高定义
		line-height: 1.5em;	1.5倍行高

	3.文本阴影
		1.代码示例
			text-shadow: rgba(13, 6, 89, 0.8) 3px 3px 5px;

		2.代码解析
			参数顺序为：颜色，水平偏移，垂直偏移，模糊度

	4.文本线条
		1.代码示例
			text-decoration: none;
		
		2.参数解析
			1. none			无线条
			2. underline	  -下划线
			3. line-through	    删除线
			4. overline		  上划线

	5.大小写转换
		1. font-variant: small-caps;		小号大写字母
		2. text-transform: capitalize;		 首字母大写	
		3. text-transform: uppercase;		-全部大写
		4. text-transform: lowercase;  		-全部小写

	6.倾斜风格
		1. font-style: italic;		文本倾斜
		2. font-style: normal;		无倾斜

	7.空白处理
		1. white-space: pre;		保留文本中的所有空白，类似使用 pre 标签
		2. white-space: nowrap		 禁止文本换行
		3. white-space: pre-wrap	  保留空白，保留换行符
		4. white-space: pre-line	  空白合并，保留换行符

	8.文本溢出
		1.代码示例
			div{
				white-space: nowrap;
				border: solid 1px #dddddd;
				width: 300px;
				overflow: hidden;
				text-overflow: ellipsis;
        	}

		2.代码解析
			1. overflow: hidden;		溢出隐藏
			2. white-space: nowrap;		 -禁止换行
			3. text-overflow: ellipsis;	   -溢出显示省略符号

	9.文本缩进
		text-indent: 2em;

	10.文本对齐
		1.水平对齐
			1. text-align: center;		文本居中对齐
			2. text-align: right;	   -文本向右对齐

		2.垂直对齐
			1. vertical-align: top;	 	  -顶部对齐
			2. vertical-align: middle;		图像在段落中居中对齐
			3. vertical-align: bottom;		底部对齐

	11.排版模式
		1.字符间隔
			1. word-spacing: 2em;		单词间隔
			2. letter-spacing: 3em;		 字符间隔

		2.排版模式
			1. writing-mode: horizontal-tb		 水平方向自上而下的书写方式
			2. writing-mode: vertical-rl		垂直方向自右而左的书写方式
			3. writing-mode: vertical-lr		垂直方向内内容从上到下，水平方向从左到右

-------------------------------------------------------------------------------
14.背景处理
	1.背景颜色
		1. 背景颜色可以使用 rga | rgba | 十六进制 等颜色格式
		2. background-color: blueviolet;

	2.背景图片
		1. 可以使用 png| gif |jpeg 等图片做为背景使用
		2. background-image: url(../img/css_background.webp);

	3.背景裁切
		1.说明
			使用 background-clip 可以控制背景的填充位置
		
		2.属性列表
			border-box		包括边框
			padding-box		-不含边框，包括内边距
			content-box		-内容区域

	4.背景重复
		1.说明
			使用 background-repeat 设置背景重复的规则
		
		2.属性列表
			1. repeat		水平、垂直重复
			2. repeat-x		 水平重复
			3. repeat-y		 垂直重复
			4. no-repeat	 -不重复
			5. space	   -背景图片对称均匀分布

	5.背景滚动
		1.说明
			使用 background-attachment 设置在页面滚动时的图片处理方式
			
		2.属性列表
			1. scroll	-背景滚动
			2. fixed	背景固定		

	6.背景位置
		1.说明
			使用 background-position 用于设置背景图片的水平、垂直定位
		
		2.属性列表
			left		左对齐
			right		-右对齐
			center	     居中对齐
			top		   -顶端对齐
			bottom		 底部对齐
			5px 5px		 水平、垂直设置
			50% 50%		 水平、垂直设置

	7.背景尺寸
		1.说明
			使用 background-size 调整背景尺寸

		2.属性列表
			cover		背景完全覆盖，可能会有背景溢出
			contain		 图片不溢出的放在容器中，可能会漏出部分区域
			100px auto	  调整宽高
			100px 100px	  -调整宽高

	8.多个背景
		1.后定义的背景置于底层
			background-image: url(xj-small.png), url(bg.png);

		2.多属性定义
			background-image: url(xj-small.png), url(bg.png);
			background-repeat: no-repeat;
			background-position: top left, right bottom;

		3.可以一次定义多个背景图片
			background: url(xj-small.png) left 50% no-repeat,
                url(bg.png) right 100% no-repeat red;

	9.组合设置
		1. 可以使用一条指令设置背景
		2. background: red url(xj-small.png) no-repeat right 50% fixed;


	10.盒子阴影
		1.说明
			可以使用 box-shadow 对盒子元素设置阴影，参数为 水平偏移,垂直偏移,模糊度,颜色 构成
		
		2.示例
			box-shadow: 10px 10px 10px rgba(100, 100, 100, .5);

	11.颜色渐变
		1.线性渐变
			向下渐变	background: linear-gradient(green,blue);
			渐变角度	background: linear-gradient(30deg, red, green);
			向右渐变	background: linear-gradient(to right, red, green)
			向左渐变	background: linear-gradient(to left, red, green);
			左上渐变	background: linear-gradient(to top left, red, green);
			右下渐变	background: linear-gradient(to right bottom, red, green);
			多个颜色	background: linear-gradient(red, rgb(0, 0, 200), green, rgba(122, 211, 100, 0));
		
		2.径向渐变
			设置渐变		background: radial-gradient(red, blue, green);
			设置渐变宽度与高度	 background: radial-gradient(100px 200px, red, blue, green);
			左下渐变		background: radial-gradient(at bottom left, red, blue);
			右下渐变		background: radial-gradient(at bottom right, red, blue);
			左侧向中心渐变	   background: radial-gradient(at center left, red, blue);
			底部向中心渐变	   background: radial-gradient(at 50% 100%, red, blue);

	12.标识位
		1.说明
			颜色未指定标识时，颜色会平均分布。

		2. background: linear-gradient(45deg,red 50%, blue 50%);

	13中间点
		设置渐变中心点的位置
		background: linear-gradient(45deg, red, 50%, blue);

	14.进度条绘制
		background: repeating-linear-gradient(90deg,red ,25px,yellow 25px,25px,blue 50px);

-------------------------------------------------------------------------------
15.数据样式
	1.定制表格
		1.说明
			除了使用 table 标签绘制表格外，也可以使用 display 样式绘制。		

		2.属性
			table			对应 table
			table-caption		对应 caption
			table-row		  对表 tr
			table-row-group		 对应 tbody
			table-header-group	  -对应 thead
			table-footer-group	  -对应 tfoot

	2.列表
		1.列表符号
			1.说明
				使用 list-style-type 来设置列表样式，规则是继承的，所以在ul 标签上设置即可。

			2.属性列表
				none				无标记。
				disc				默认。标记是实心圆。
				circle				 标记是空心圆。
				square				 标记是实心方块。
				decimal				 -标记是数字。
				decimal-leading-zero		0开头的数字标记。(01, 02, 03, 等。)
				lower-roman			   -小写罗马数字(i, ii, iii, iv, v, 等。)
				upper-roman			   -大写罗马数字(I, II, III, IV, V, 等。)
				lower-alpha			   -小写英文字母The marker is lower-alpha (a, b, c, d, e, 等。)
				upper-alpha			   -大写英文字母The marker is upper-alpha (A, B, C, D, E, 等。)
				lower-greek			   -小写希腊字母(alpha, beta, gamma, 等。)
				lower-latin			   -小写拉丁字母(a, b, c, d, e, 等。)
				upper-latin			   -大写拉丁字母(A, B, C, D, E, 等。)
				hebrew			     传统的希伯来编号方式
				armenian			  传统的亚美尼亚编号方式
				georgian			  传统的乔治亚编号方式(an, ban, gan, 等。)
				cjk-ideographic			 -简单的表意数字
				hiragana			  标记是：a, i, u, e, o, ka, ki, 等。（日文片假名）
				katakana			  标记是：A, I, U, E, O, KA, KI, 等。（日文片假名）
				hiragana-iroha			 标记是：i, ro, ha, ni, ho, he, to, 等。（日文片假名）
				katakana-iroha			 标记是：I, RO, HA, NI, HO, HE, TO, 等。（日文片假名）

-------------------------------------------------------------------------------
16.浮动布局
	1.float	
		1.说明
			float 属性定义元素在哪个方向浮动。以往这个属性总应用于图像，使文本围绕在图像周围，不过在 CSS 中，任何元素都可以浮动。浮动元素会生成一个块级框，而不论它本身是何种元素
			使用浮动可以控制相邻元素间的排列关系

		2.属性解析
			left	向左浮动
			right	-向右浮动
			none	不浮动
	2.浮动介绍	
		1. 没有设置浮动的块元素是独占一行的
		2. 浮动会对后面的元素产生影响，浮动的元素会丢失自身空间
		3. 如果只给第一个元素设置浮动，第二个元素不设置，后面的元素会占用第一个元素空间
		4. 两个元素都设置浮动后，会并排显示
		5. 浮动元素边界不能超过父元素的padding
		6. 行元素如span浮动后会变为块元素，所以浮动后的元素可以设置宽高

	3.清除浮动
		1.clear属性
			left	-左边远离浮动元素
			right	 右连远离浮动元素
			both	-左右都远离浮动元素	

		2.在父元素内部最后面添加一个没有高度的了元素，并使用clear:both
			main::after {
				content: "";
				display: block;
				clear: both;
			}

		3.overflow
			1.说明
				子元素使用浮动后将不占用空间，这时父元素高度为将为零。
				通过添加父元素并设置 overflow 属性可以清除浮动
				将会使用父元素产生 BFC 机制，即父元素的高度计算会包括浮动元素的高度

			2.示例
				overflow: hidden/auto;

	4.形状浮动
		1.说明
			通过形状浮动可以让内容围绕图片，类似于我们在word 中的环绕排版。要求图片是有透明度的PNG格式
			使用 shape-outside 属性控制环绕距离
		
		2.属性列表
			margin-box		-外边距环绕
			padding-box		 内边距环绕
			border-box		-边线环绕
			content-box		 内容环绕

	5.显示区域
		1.说明
			使用 clip-path 可以控制显示区域的形状
		
		2.属性列表
			clip-path: circle(50% at center);			圆形
			clip-path: ellipse(50% 80% at 100% 0);		 -椭圆形
			clip-path: polygon(50% 0, 100% 100%, 0 100%)	多边形

	6.环绕模式
		1.说明
			使用 shape-outside 属性控制环绕模式
			
		2.属性列表
			circle		圆形环绕
			ellipse		-椭圆环绕
			url		  -图片环绕
			polygan		-多边环绕

-------------------------------------------------------------------------------
17.定位布局
	1.定位类型
		1.说明
			使用 position 属性设置定位类型
		
		2.属性列表
			static		默认形为，参考文档流
			relative	 相对定位
			absolute	 绝对定位
			fixed	   -固定定位
			sticky		粘性定位
		
	2.位置偏移
		1.说明
			可以为部分类型的定位元素设置上、下、左、右 的位置偏移。

		2.属性列表
			top			距离顶边
			bottom		 -距离下边
			left		-距离左部
			right		 距离右边

	2.相对定位
		相对定位是相对于元素原来的位置控制，当元素发生位置偏移时，原位置留白。

	3.绝对定位
		1. 绝对定义不受文档流影响，就像漂浮在页面中的精灵，绝对定位元素拥有行内块特性
		2. 原来的位置丢失，以页面为基准调整
		3. 如果父元素有定位，则以父元素为基准
		4. 如果元素没有设置尺寸，可以通过定位的偏移值设置元素的尺寸

	4.居中定位
		通过将 left 设置为50% ,并向左偏移子元素宽度一半可以实现水平居中，垂直居中使用方式类似
		
	5.滚动行为













